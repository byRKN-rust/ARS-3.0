#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
from config import Config
from database import Database
from telegram_bot import SteamRentalBot

def test_config():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    required_vars = [
        'TELEGRAM_TOKEN',
        'TELEGRAM_ADMIN_ID',
        'FUNPAY_LOGIN',
        'FUNPAY_PASSWORD'
    ]
    
    missing_vars = []
    for var in required_vars:
        value = getattr(Config, var, None)
        if not value:
            missing_vars.append(var)
        else:
            print(f"‚úÖ {var}: {'*' * len(str(value))} (—Å–∫—Ä—ã—Ç–æ)")
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
        return False
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    return True

def test_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        db = Database()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
        total_accounts = db.get_total_accounts()
        available_accounts = db.get_available_accounts()
        active_rentals = db.get_active_rentals()
        total_users = db.get_total_users()
        
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {total_accounts}")
        print(f"   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ: {available_accounts}")
        print(f"   ‚Ä¢ –í –∞—Ä–µ–Ω–¥–µ: {active_rentals}")
        print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def test_telegram_bot():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞...")
    
    try:
        bot = SteamRentalBot()
        
        if not bot.token:
            print("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        if not bot.admin_id:
            print("‚ùå TELEGRAM_ADMIN_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–∞
        if bot.setup():
            print("‚úÖ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print(f"üîë Admin ID: {bot.admin_id}")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞: {e}")
        return False

def test_funpay_manager():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ FunPay –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    print("\nüõí –ü—Ä–æ–≤–µ—Ä–∫–∞ FunPay –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
    
    try:
        from funpay_manager import FunPayManager
        
        manager = FunPayManager()
        
        if not manager.login or not manager.password:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ FunPay –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            return False
        
        print("‚úÖ FunPay –º–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"üîó URL: {manager.base_url}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ FunPay –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ Steam Rental System")
    print("=" * 50)
    
    tests = [
        test_config,
        test_database,
        test_telegram_bot,
        test_funpay_manager
    ]
    
    results = []
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: {e}")
            results.append(False)
    
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    
    passed = sum(results)
    total = len(results)
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
        return True
    else:
        print(f"‚ö†Ô∏è –ü—Ä–æ–π–¥–µ–Ω–æ {passed}/{total} —Ç–µ—Å—Ç–æ–≤")
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        return False

if __name__ == '__main__':
    success = main()
    sys.exit(0 if success else 1)
