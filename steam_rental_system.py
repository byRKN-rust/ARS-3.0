#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üéÆ Steam Rental System - –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
–û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
"""

import time
import schedule
import threading
import sqlite3
from datetime import datetime, timedelta
from config import Config
from database import Database
from steam_manager import SteamManager
from funpay_manager import FunPayManager

class SteamRentalSystem:
    def __init__(self):
        self.db = Database()
        self.steam_manager = SteamManager()
        self.funpay_manager = FunPayManager()
        self.running = False
        
    def start(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
        print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –∞—Ä–µ–Ω–¥—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Steam...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
        self.setup_scheduler()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        self.running = True
        self.main_loop()
    
    def setup_scheduler(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        schedule.every(5).minutes.do(self.check_expired_rentals)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
        schedule.every(10).minutes.do(self.check_new_orders)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
        schedule.every(15).minutes.do(self.check_new_reviews)
        
        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å FunPay –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
        schedule.every(30).minutes.do(self.sync_with_funpay)
        
        # –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 3:00
        schedule.every().day.at("03:00").do(self.backup_database)
        
        print("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    def main_loop(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å–∏—Å—Ç–µ–º—ã"""
        print("üîÑ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∑–∞–ø—É—â–µ–Ω")
        
        try:
            while self.running:
                # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
                schedule.run_pending()
                
                # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
                time.sleep(1)
                
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
            self.stop()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            self.stop()
    
    def check_expired_rentals(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥"""
        try:
            print("‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥
            expired_count = self.db.end_expired_rentals()
            
            if expired_count > 0:
                print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {expired_count} –∏—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥")
                
                # –ò–∑–º–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª–∏ –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
                self.change_passwords_for_expired_accounts()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–∞ FunPay
                self.update_funpay_listings()
            else:
                print("‚úÖ –ò—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏—Å—Ç–µ–∫—à–∏—Ö –∞—Ä–µ–Ω–¥: {e}")
    
    def change_passwords_for_expired_accounts(self):
        """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è –∏—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
        try:
            print("üîë –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è –∏—Å—Ç–µ–∫—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            available_accounts = self.db.get_available_accounts_list()
            
            for account in available_accounts:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å
                new_password = self.steam_manager.generate_password()
                
                # –ò–∑–º–µ–Ω—è–µ–º –ø–∞—Ä–æ–ª—å –≤ Steam
                if self.steam_manager.change_steam_password(
                    account['username'], 
                    account['password'], 
                    new_password
                ):
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    self.update_account_password(account['id'], new_password)
                    print(f"‚úÖ –ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ {account['username']}")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è {account['username']}")
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª–µ–π: {e}")
    
    def update_account_password(self, account_id: int, new_password: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        try:
            with sqlite3.connect(self.db.db_path) as conn:
                cursor = conn.cursor()
                cursor.execute('''
                    UPDATE steam_accounts 
                    SET password = ?, updated_at = datetime('now')
                    WHERE id = ?
                ''', (new_password, account_id))
                conn.commit()
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è –≤ –ë–î: {e}")
    
    def check_new_orders(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ FunPay"""
        try:
            print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã —á–µ—Ä–µ–∑ FunPay
            new_orders = self.funpay_manager.check_new_orders()
            
            if new_orders:
                print(f"üÜï –ù–∞–π–¥–µ–Ω–æ {len(new_orders)} –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤")
                
                for order in new_orders:
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–∫–∞–∑
                    self.process_new_order(order)
            else:
                print("‚úÖ –ù–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–∫–∞–∑–æ–≤: {e}")
    
    def process_new_order(self, order: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
        try:
            print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ {order['id']} –¥–ª—è –∏–≥—Ä—ã {order['game_name']}")
            
            # –ò—â–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –∏–≥—Ä—ã
            available_accounts = self.db.get_available_accounts_list()
            # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∏–≥—Ä–µ
            available_accounts = [acc for acc in available_accounts if acc['game_name'] == order['game_name']]
            
            if available_accounts:
                # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
                account = available_accounts[0]
                
                # –ü–∞—Ä—Å–∏–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã
                duration_hours = self.parse_duration(order['duration'])
                
                # –ê—Ä–µ–Ω–¥—É–µ–º –∞–∫–∫–∞—É–Ω—Ç
                if self.db.create_rental(account['id'], order['id'], duration_hours):
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ —á–µ—Ä–µ–∑ FunPay
                    account_data = {
                        'username': account['username'],
                        'password': account['password'],
                        'game_name': account['game_name'],
                        'duration': duration_hours,
                        'start_time': datetime.now().strftime("%Y-%m-%d %H:%M")
                    }
                    
                    if self.funpay_manager.process_order(order['id'], account_data):
                        print(f"‚úÖ –ó–∞–∫–∞–∑ {order['id']} –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ {order['id']}")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ {order['id']}")
            else:
                print(f"‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –∏–≥—Ä—ã {order['game_name']}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞ {order['id']}: {e}")
    
    def parse_duration(self, duration_str: str) -> int:
        """–ü–∞—Ä—Å–∏–Ω–≥ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã"""
        try:
            # –ü—Ä–∏–º–µ—Ä—ã: "2 —á–∞—Å–∞", "24 —á–∞—Å–∞", "7 –¥–Ω–µ–π"
            if "—á–∞—Å" in duration_str:
                return int(duration_str.split()[0])
            elif "–¥–µ–Ω—å" in duration_str or "–¥–Ω–µ–π" in duration_str:
                days = int(duration_str.split()[0])
                return days * 24
            else:
                return Config.DEFAULT_RENTAL_DURATION
        except:
            return Config.DEFAULT_RENTAL_DURATION
    
    def check_new_reviews(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ FunPay"""
        try:
            print("‚≠ê –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã —á–µ—Ä–µ–∑ FunPay
            new_reviews = self.funpay_manager.check_reviews()
            
            if new_reviews:
                print(f"üÜï –ù–∞–π–¥–µ–Ω–æ {len(new_reviews)} –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤")
                
                for review in new_reviews:
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–∑—ã–≤
                    self.process_new_review(review)
            else:
                print("‚úÖ –ù–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ—Ç–∑—ã–≤–æ–≤: {e}")
    
    def process_new_review(self, review: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –æ—Ç–∑—ã–≤–∞"""
        try:
            print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞ {review['id']}")
            
            # –ï—Å–ª–∏ –æ—Ç–∑—ã–≤ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π (4-5 –∑–≤–µ–∑–¥), –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å–Ω–æ–µ –≤—Ä–µ–º—è
            if review['rating'] >= 4:
                # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ order_id
                user_id = self.find_user_by_order(review['order_id'])
                
                if user_id:
                    # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å–Ω–æ–µ –≤—Ä–µ–º—è (30 –º–∏–Ω—É—Ç)
                    self.add_bonus_time_to_user(user_id, 30)
                    print(f"üéÅ –î–æ–±–∞–≤–ª–µ–Ω–æ 30 –º–∏–Ω—É—Ç –±–æ–Ω—É—Å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                else:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–∫–∞–∑–∞ {review['order_id']}")
            else:
                print(f"üìù –û—Ç–∑—ã–≤ {review['id']} –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –±–æ–Ω—É—Å–∞ (–æ—Ü–µ–Ω–∫–∞: {review['rating']})")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–∑—ã–≤–∞ {review['id']}: {e}")
    
    def find_user_by_order(self, order_id: str) -> str:
        """–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∑–∞–∫–∞–∑–∞"""
        try:
            with sqlite3.connect(self.db.db_path) as conn:
                cursor = conn.cursor()
                cursor.execute('''
                    SELECT renter_id FROM rentals 
                    WHERE id = ?
                ''', (order_id,))
                
                result = cursor.fetchone()
                return result[0] if result else None
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
            return None
    
    def add_bonus_time_to_user(self, user_id: str, minutes: int):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å–Ω–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            success = self.db.add_bonus_time(user_id, minutes, "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–∑—ã–≤")
            if success:
                print(f"üéÅ –î–æ–±–∞–≤–ª–µ–Ω–æ {minutes} –º–∏–Ω—É—Ç –±–æ–Ω—É—Å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –±–æ–Ω—É—Å–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ–Ω—É—Å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏: {e}")
    
    def sync_with_funpay(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å FunPay"""
        try:
            print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å FunPay...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤
            orders = self.funpay_manager.check_new_orders()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–∑—ã–≤—ã
            reviews = self.funpay_manager.check_reviews()
            
            print(f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–∞–∫–∞–∑–æ–≤: {len(orders)}, –æ—Ç–∑—ã–≤–æ–≤: {len(reviews)}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å FunPay: {e}")
    
    def backup_database(self):
        """–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        try:
            print("üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            
            # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
            # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            backup_filename = f"steam_rental_backup_{timestamp}.db"
            
            print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_filename}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        
        self.running = False
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º FunPay –º–µ–Ω–µ–¥–∂–µ—Ä
        self.funpay_manager.close()
        
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
