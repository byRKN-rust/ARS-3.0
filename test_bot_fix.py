#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ set_wakeup_fd
"""

import threading
import time

def test_bot_import():
    """–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞"""
    try:
        print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –±–æ—Ç–∞...")
        
        from telegram_bot import SteamRentalBot
        from database import Database
        
        print("‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

def test_bot_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞"""
    try:
        print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞...")
        
        from telegram_bot import SteamRentalBot
        from database import Database
        
        db = Database()
        bot = SteamRentalBot(db)
        
        print("‚úÖ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        return False

def test_bot_setup():
    """–¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"""
    try:
        print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞...")
        
        from telegram_bot import SteamRentalBot
        from database import Database
        
        db = Database()
        bot = SteamRentalBot(db)
        
        if bot.setup():
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–∞")
            return True
        else:
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
            return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞: {e}")
        return False

def test_bot_thread():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –ø–æ—Ç–æ–∫–µ...")
        
        from telegram_bot import SteamRentalBot
        from database import Database
        
        db = Database()
        bot = SteamRentalBot(db)
        
        if not bot.setup():
            print("‚ùå –ë–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        bot_thread = threading.Thread(target=bot.run, daemon=True)
        bot_thread.start()
        
        # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
        time.sleep(3)
        
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ –ø–æ—Ç–æ–∫–µ –±–µ–∑ –æ—à–∏–±–æ–∫")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ –ø–æ—Ç–æ–∫–µ: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ set_wakeup_fd")
    print("=" * 50)
    
    tests = [
        ("–ò–º–ø–æ—Ä—Ç –±–æ—Ç–∞", test_bot_import),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞", test_bot_creation),
        ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞", test_bot_setup),
        ("–ó–∞–ø—É—Å–∫ –≤ –ø–æ—Ç–æ–∫–µ", test_bot_thread)
    ]
    
    passed = 0
    total = len(tests)
    
    for test_name, test_func in tests:
        try:
            if test_func():
                passed += 1
            else:
                print(f"‚ùå –¢–µ—Å—Ç '{test_name}' –Ω–µ –ø—Ä–æ—à–µ–ª")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏! –û—à–∏–±–∫–∞ set_wakeup_fd –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –æ—Å—Ç–∞—Ç—å—Å—è.")
        return False

if __name__ == "__main__":
    main()
