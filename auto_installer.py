#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üöÄ –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Steam Rental System
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã Python
"""

import subprocess
import sys
import os
import platform
from pathlib import Path

class AutoInstaller:
    def __init__(self):
        self.system = platform.system()
        self.python_version = sys.version_info
        self.requirements_file = "requirements.txt"
        
    def print_banner(self):
        """–ü–µ—á–∞—Ç—å –±–∞–Ω–Ω–µ—Ä–∞"""
        print("=" * 60)
        print("üéÆ Steam Rental System - –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫")
        print("=" * 60)
        print(f"üíª –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {self.system}")
        print(f"üêç –í–µ—Ä—Å–∏—è Python: {self.python_version.major}.{self.python_version.minor}.{self.python_version.micro}")
        print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
        print("=" * 60)
        print()
    
    def check_python_version(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
        if self.python_version < (3, 8):
            print("‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ!")
            print(f"   –£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: {self.python_version.major}.{self.python_version.minor}.{self.python_version.micro}")
            return False
        
        print("‚úÖ –í–µ—Ä—Å–∏—è Python –ø–æ–¥—Ö–æ–¥–∏—Ç")
        return True
    
    def check_pip(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è pip"""
        try:
            import pip
            print("‚úÖ pip –¥–æ—Å—Ç—É–ø–µ–Ω")
            return True
        except ImportError:
            print("‚ùå pip –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
    
    def upgrade_pip(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip"""
        print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip...")
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", "--upgrade", "pip"])
            print("‚úÖ pip –æ–±–Ω–æ–≤–ª–µ–Ω")
            return True
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è pip: {e}")
            return False
    
    def install_requirements(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ requirements.txt"""
        if not os.path.exists(self.requirements_file):
            print(f"‚ùå –§–∞–π–ª {self.requirements_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False
        
        print(f"üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ {self.requirements_file}...")
        
        try:
            # –ß–∏—Ç–∞–µ–º requirements.txt
            with open(self.requirements_file, 'r', encoding='utf-8') as f:
                requirements = [line.strip() for line in f if line.strip() and not line.startswith('#')]
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(requirements)} –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–∞–∫–µ—Ç
            for i, requirement in enumerate(requirements, 1):
                print(f"üîÑ [{i}/{len(requirements)}] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ {requirement}...")
                
                try:
                    subprocess.check_call([
                        sys.executable, "-m", "pip", "install", requirement, "--quiet"
                    ])
                    print(f"‚úÖ {requirement} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                except subprocess.CalledProcessError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ {requirement}: {e}")
                    return False
            
            print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {self.requirements_file}: {e}")
            return False
    
    def install_system_dependencies(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        
        if self.system == "Windows":
            print("üí° –ù–∞ Windows –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è")
        elif self.system == "Linux":
            print("üêß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Linux...")
            try:
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è Linux
                subprocess.check_call([
                    "sudo", "apt-get", "update", "-qq"
                ])
                subprocess.check_call([
                    "sudo", "apt-get", "install", "-y", "-qq",
                    "python3-dev", "build-essential", "libssl-dev", "libffi-dev"
                ])
                print("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            except (subprocess.CalledProcessError, FileNotFoundError):
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è sudo)")
        elif self.system == "Darwin":  # macOS
            print("üçé –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è macOS...")
            try:
                subprocess.check_call([
                    "brew", "install", "openssl", "readline", "sqlite3", "xz", "zlib"
                ])
                print("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            except (subprocess.CalledProcessError, FileNotFoundError):
                print("‚ö†Ô∏è Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å https://brew.sh/")
    
    def create_virtual_environment(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        
        venv_name = "venv"
        if os.path.exists(venv_name):
            print(f"‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ {venv_name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return True
        
        try:
            subprocess.check_call([sys.executable, "-m", "venv", venv_name])
            print(f"‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ {venv_name} —Å–æ–∑–¥–∞–Ω–æ")
            
            # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
            if self.system == "Windows":
                activate_script = os.path.join(venv_name, "Scripts", "activate.bat")
                print(f"üí° –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: {activate_script}")
            else:
                activate_script = os.path.join(venv_name, "bin", "activate")
                print(f"üí° –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source {activate_script}")
            
            return True
            
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {e}")
            return False
    
    def check_chrome_driver(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome Driver"""
        print("üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome Driver...")
        
        try:
            from webdriver_manager.chrome import ChromeDriverManager
            driver_path = ChromeDriverManager().install()
            print(f"‚úÖ Chrome Driver –Ω–∞–π–¥–µ–Ω: {driver_path}")
            return True
        except Exception as e:
            print(f"‚ö†Ô∏è Chrome Driver –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
            print("üí° –û–Ω –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ")
            return False
    
    def create_launcher_scripts(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞"""
        print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞...")
        
        # Windows batch —Ñ–∞–π–ª
        if self.system == "Windows":
            batch_content = """@echo off
echo üéÆ –ó–∞–ø—É—Å–∫ Steam Rental System...
echo.
python main.py
pause
"""
            with open("start.bat", "w", encoding="cp1251") as f:
                f.write(batch_content)
            print("‚úÖ –°–æ–∑–¥–∞–Ω start.bat")
        
        # Linux/macOS shell —Å–∫—Ä–∏–ø—Ç
        else:
            shell_content = """#!/bin/bash
echo "üéÆ –ó–∞–ø—É—Å–∫ Steam Rental System..."
echo
python3 main.py
"""
            with open("start.sh", "w", encoding="utf-8") as f:
                f.write(shell_content)
            
            # –î–µ–ª–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
            os.chmod("start.sh", 0o755)
            print("‚úÖ –°–æ–∑–¥–∞–Ω start.sh")
    
    def create_config_template(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        print("‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        
        if not os.path.exists(".env"):
            if os.path.exists("env_example.txt"):
                import shutil
                shutil.copy("env_example.txt", ".env")
                print("‚úÖ –°–æ–∑–¥–∞–Ω .env –∏–∑ env_example.txt")
                print("üí° –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª, —É–∫–∞–∑–∞–≤ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ")
            else:
                print("‚ö†Ô∏è –§–∞–π–ª env_example.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    def run_tests(self):
        """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"""
        print("üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
            import config
            import database
            import steam_manager
            import funpay_manager
            import telegram_bot
            print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
            return True
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
            return False
    
    def show_next_steps(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"""
        print("\n" + "=" * 60)
        print("üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("=" * 60)
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env, —É–∫–∞–∑–∞–≤ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ")
        print("2. –ü–æ–ª—É—á–∏—Ç–µ Telegram —Ç–æ–∫–µ–Ω —É @BotFather")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ FunPay –∞–∫–∫–∞—É–Ω—Ç")
        print("4. –ü–æ–ª—É—á–∏—Ç–µ Steam API –∫–ª—é—á")
        print("\nüöÄ –ó–∞–ø—É—Å–∫:")
        
        if self.system == "Windows":
            print("   ‚Ä¢ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –Ω–∞ start.bat")
            print("   ‚Ä¢ –ò–ª–∏: python main.py")
        else:
            print("   ‚Ä¢ ./start.sh")
            print("   ‚Ä¢ –ò–ª–∏: python3 main.py")
        
        print("\nüìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md")
        print("üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞: —Å–æ–∑–¥–∞–π—Ç–µ issue –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏")
        print("\n" + "=" * 60)
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫–∞"""
        self.print_banner()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏
        if not self.check_python_version():
            return False
        
        if not self.check_pip():
            print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pip: https://pip.pypa.io/en/stable/installation/")
            return False
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
        self.upgrade_pip()
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        self.install_system_dependencies()
        
        # –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
        self.create_virtual_environment()
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤
        if not self.install_requirements():
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Chrome Driver
        self.check_chrome_driver()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ –∑–∞–ø—É—Å–∫–∞
        self.create_launcher_scripts()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        self.create_config_template()
        
        # –¢–µ—Å—Ç—ã
        if not self.run_tests():
            print("‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
        
        # –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
        self.show_next_steps()
        
        return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    installer = AutoInstaller()
    
    try:
        success = installer.run()
        if success:
            print("\n‚úÖ –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ùå –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏")
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()
